version: '3.9'

services:
  mapping-mediator-config-importer:
    image: jembi/instantohie-config-importer
    deploy:
      restart_policy:
        condition: none
    configs:
      - source: mediator-config-metadata.js
        target: /metadata.js
      - source: mediator-config-register.json
        target: /register.json
      - source: mediator-config-register-response.json
        target: /register-response.json
      - source: mediator-config-update-response.json
        target: /update-response.json
      - source: mediator-config-update.json
        target: /update.json
      - source: mediator-config-search.json
        target: /search.json
      - source: mediator-config-searchAll.json
        target: /searchAll.json
      - source: mediator-config-patientLinks.json
        target: /patientLinks.json
      - source: mediator-config-patientLinksResponse.json
        target: /patientLinksResponse.json
      - source: mediator-config-searchAllResponse.json
        target: /searchAllResponse.json
      - source: mediator-config-searchAllProbabilistic.json
        target: /searchAllProbabilistic.json
      - source: mediator-config-searchAllProbabilisticResponse.json
        target: /searchAllProbabilisticResponse.json
    networks:
      mapping-mediator:
    # This command will only attempt to import the config when the uptime responds with a 2xx
    command: sh -c "wait-on -t 60000 http-get://openhim-mapping-mediator:3003/uptime && node /metadata.js"

configs:
  mediator-config-metadata.js:
    file: ./metadata.js
    name: mediator-config-metadata.js-${mediator_config_metadata_js_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-register.json:
    file: ./register.json
    name: mediator-config-register.json-${mediator_config_register_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-register-response.json:
    file: ./register-response.json
    name: mediator-config-register-response.json-${mediator_config_register_response_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-update-response.json:
    file: ./update-response.json
    name: mediator-config-update-response.json-${mediator_config_update_response_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-update.json:
    file: ./update.json
    name: mediator-config-update.json-${mediator_config_update_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-search.json:
    file: ./search.json
    name: mediator-config-search.json-${mediator_config_search_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-searchAll.json:
    file: ./searchAll.json
    name: mediator-config-searchAll.json-${mediator_config_searchAll_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-patientLinks.json:
    file: ./patientLinks.json
    name: mediator-config-patientLinks.json-${mediator_config_patientLinks_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-patientLinksResponse.json:
    file: ./patientLinksResponse.json
    name: mediator-config-patientLinksResponse.json-${mediator_config_patientLinksResponse_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-searchAllResponse.json:
    file: ./searchAllResponse.json
    name: mediator-config-searchAllResponse.json-${mediator_config_searchAllResponse_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-searchAllProbabilistic.json:
    file: ./searchAllProbabilistic.json
    name: mediator-config-searchAllProbabilistic.json-${mediator_config_searchAllProbabilistic_json_DIGEST:?err}
    labels:
      name: jempi
  mediator-config-searchAllProbabilisticResponse.json:
    file: ./searchAllProbabilisticResponse.json
    name: mediator-config-searchAllProbabilisticResponse.json-${mediator_config_searchAllProbabilisticResponse_json_DIGEST:?err}
    labels:
      name: jempi

networks:
  mapping-mediator:
    name: openhim_mapping_mediator_public
    external: true
