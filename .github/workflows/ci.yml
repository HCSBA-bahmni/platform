name: ethiopia-ci
on: [push, workflow_dispatch]
concurrency: e2e
jobs:
  provision-e2e-server:
    runs-on: ubuntu-latest
    env:
      TF_VAR_PROJECT_NAME: e2e
      TF_VAR_INSTANCE_COUNT: 1
      TF_VAR_PUBLIC_KEY_PATH: /home/runner/key.pub
      TF_VAR_SUB_DOMAIN_NAME_CREATION_ENABLED: true
      TF_VAR_DOMAIN_NAME_CREATION_ENABLED: false
      TF_VAR_HOSTED_ZONE_ID: Z002854315SMBI8TM9A2D
      TF_VAR_DOMAIN_NAME: jembi-sp.org
      TF_VAR_SUBDOMAIN_NAMES: ${{ github.run_id }}.jembi-sp.org *.${{ github.run_id }}.jembi-sp.org
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./infrastructure/terraform
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - run: 'echo "$SSH_KEY" > /home/runner/key.pub'
        shell: bash
        env:
          SSH_KEY: ${{ secrets.DEPLOY_KEY_PUB }}
      - run: terraform init
      - run: terraform apply -auto-approve
      - name: Upload terraform state
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: tfstate
          path: infrastructure/terraform/terraform.tfstate
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - run: ssh-keyscan -H ${{ github.run_id }}.jembi-sp.org >> ~/.ssh/known_hosts
      - run: ssh ubuntu@${{ github.run_id }}.jembi-sp.org date
  configure-e2e-server:
    runs-on: ubuntu-latest
    needs: provision-e2e-server
    steps:
      - uses: actions/checkout@v3
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbooks/provision.yml
          directory: ./infrastructure/ansible
          key: ${{ secrets.DEPLOY_KEY }}
          vault_password: ${{ secrets.VAULT_PASSWORD }}
          inventory: |
            [leader]
            ${{ github.run_id }}.jembi-sp.org name=node-1

            [managers]

            [workers]
          options: |
            --become
            --user=ubuntu
            --extra-vars @./inventories/development/group_vars/all.yml
  launch-platform:
    runs-on: ubuntu-latest
    needs: configure-e2e-server
    steps:
      - uses: actions/checkout@v3
      - run: ./get-cli.sh
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - run: ssh-keyscan -H ${{ github.run_id }}.jembi-sp.org >> ~/.ssh/known_hosts
      - run: ssh ubuntu@${{ github.run_id }}.jembi-sp.org docker info
      - run: ssh ubuntu@${{ github.run_id }}.jembi-sp.org docker pull jembi/platform
      - run: DOCKER_HOST=ssh://ubuntu@${{ github.run_id }}.jembi-sp.org ./platform-linux --env-file=.env.dev init interoperability-layer-openhim
  destroy-e2e-server:
    runs-on: ubuntu-latest
    if: always()
    needs: [provision-e2e-server, configure-e2e-server, launch-platform]
    env:
      TF_VAR_PROJECT_NAME: e2e
      TF_VAR_INSTANCE_COUNT: 1
      TF_VAR_PUBLIC_KEY_PATH: /home/runner/key.pub
      TF_VAR_SUB_DOMAIN_NAME_CREATION_ENABLED: true
      TF_VAR_DOMAIN_NAME_CREATION_ENABLED: false
      TF_VAR_HOSTED_ZONE_ID: Z002854315SMBI8TM9A2D
      TF_VAR_DOMAIN_NAME: jembi-sp.org
      TF_VAR_SUBDOMAIN_NAMES: "[${{ github.run_id }}.jembi-sp.org,*.${{ github.run_id }}.jembi-sp.org]"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: ./infrastructure/terraform
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - run: 'echo "$SSH_KEY" > /home/runner/key.pub'
        shell: bash
        env:
          SSH_KEY: ${{secrets.DEPLOY_KEY_PUB}}
      - name: Download terraform state
        uses: actions/download-artifact@v3
        with:
          name: tfstate
          path: infrastructure/terraform/
      - run: terraform init
      - run: terraform destroy -auto-approve
