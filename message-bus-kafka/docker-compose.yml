version: '3.3'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper
    deploy:
      replicas: 1
  
  kafka:
    image: wurstmeister/kafka:2.13-2.7.1
    command: [start-kafka.sh]
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: ${KAFKA_TOPICS:-'2xx:1:1#3xx:1:1#4xx:1:1#5xx:1:1#yxx:1:1'} # topic:partition:replicas
      KAFKA_CREATE_TOPICS_SEPARATOR: '#'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'FALSE'
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 20971520
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka-volume:/kafka
    depends_on:
      - 'zookeeper'
    deploy:
      replicas: 0

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    hostname: kafdrop
    depends_on:
      - 'kafka'
    environment:
      KAFKA_BROKERCONNECT: 'kafka:9092'
      JVM_OPTS: '-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify'
      CMD_ARGS: '--server.port=9013 --management.server.port=9013'
    deploy:
      replicas: 0

volumes:
  kafka-volume:
